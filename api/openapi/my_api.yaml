openapi: 3.0.0
info:
  description: 
    This is a pds mapper plugin.
  version: "1.0.0"
  title: Mapper plugin
  contact:
    email: you@your-company.com
  license:
    name: MIT
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /config:
    get:
      summary: returns the config for the plugin
      operationId: api.get_config
      responses:
        '200':
          description: config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
              example:
                {
                    "title": "DOAC variable mapper",
                    "piid": "pdspi-mapper-DOAC",
                    "pluginType": "m",
                    "pluginSelectors": [ {
                        "title": "FHIR URI - an URL (locator) or an URN (unique name)",
                        "id": "FHIR.URI",
                        "selectorValue": {
                            "value": "http://hapi.fhir.org/baseR4",
                            "title": "Happy FHIR base url" }
                      }
                    ],
                    "pluginParameterDefaults": [ 
                      {
                        "id": "current-time",
                        "parameterDescription": "Compute variables relevant to this timestamp.",
                        "parameterValue": { "value": "2019-09-20T00:00:01Z" },
                        "legalValues": { "type": "string", "format": "time-stamp" }
                      }
                    ],
                    "supportedPatientVariables": [
                      {
                        "id": "LOINC:30525-0",
                        "title": "Age",
                        "description": "Fractional age of patient relative to [current-time].",
                        "legalValues": { "type": "number", "minimum": "0" },
                      },
                      {
                        "id": "1114195.extant",
                        "title": "Rivoroxaban, extant",
                        "parameterDescription": "Dosing of rivoroxaban, based on the finding of any rxnorm codes found on the record that map to rxCUI 1114195.",
                        "legalValues": { "type": "number" } 
                      },
                      {
                        "id": "1114195.intensity",
                        "title": "Rivoroxaban, dosage",
                        "parameterDescription": "Dosing of rivoroxaban.",
                        "legalValues": { "type": "number", "minimum": 0  } 
                      },
                      {
                        "id": "HP:0001892.extant.days",
                        "title": "Bleeding, days since",
                        "parameterDescription": "Days since the last bleeding event, relative to current-time. A value < -age means never. Bleeding events are identified by one of 50 ICD10 codes or 42 ICD9 codes.",
                        "legalValues": { "type": "number" } 
                      },
                      {
                        "id": "HP:0000077.extant.boolean",
                        "title": "Kidney dysfunction, extant",
                        "description": "If true, then Kidney dysfunction was found in the record for the patient, relative to current-time.",
                        "legalValues": { "type": "boolean" },
                      },
                      {
                        "id": "1114195.extant.count",
                        "title": "Rivoroxaban dosing count",
                        "parameterDescription": "Number of times patient was dosed with Rivoroxaban.",
                        "legalValues": { "type": "number" } 
                      },
                  ]
                }
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Unknown query parameters",
                      "source": "client",
                      "level": 4,
                      "action": "Ignoring query parameters"
                      } ]
                  config:
                    $ref: '#/components/schemas/Config'
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Not a mapper plugin type, [g] for [pdspi-mapper-example].",
                      "source": "admin user",
                      "level": 1,
                      "action": "Changed plugin from [g] type to 'm'[pdspi-mapper-example] and returning config as-is otherwise"
                      } ]
                  configs:
                    $ref: '#/components/schemas/Config'
  /mapping:
    post:
      summary: map from patient record to clinical feature variables
      operationId: api.mappingClinicalFromData
      parameters:
        - in: query
          name: patient_id
          example: 38
          schema:
            type: string
          required: true
        - in: query
          name: timestamp
          schema:
            type: string
            format: date-time
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: "Send in FHIR bundle containing as much data as needed to map the values requested in 'variableTypes'. For example, to provide clinical guidance, the bundle should contain the entire patient record. To provide mappings for a study period, the record will only cover the duration of the study. To create a feature vector for a training set, the duration might be only 24 hours, and the mapper might be called repeatedly for the same patient across multiple days to create a standardized array."
              type: object
              required:
                - data
              properties:
                txid:
                  type: string
                timeout:
                  type: integer
                  description: "Number of milliseconds until time out. Factory system default should be 120000 (2 minutes) for RUO applictions, and only 500ms for clinical."
                data:
                  $ref: "#/components/schemas/Bundle"
                variableTypes:
                  description: "If absent, all variables will be mapped and returned."
                  type: array
                  items:
                    $ref: "#/components/schemas/PatientVariableType"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  txid:
                    type: string
                  values:
                    type: array
                    items:
                      $ref: "#/components/schemas/PatientVariableValue"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Unknown query parameters",
                      "source": "client",
                      "level": 4,
                      "action": "Ignoring query parameters"
                      } ]
                  mappings:
                    type: object
                    properties:
                      txid:
                        type: string
                      values:
                        type: array
                        items:
                          $ref: "#/components/schemas/PatientVariableValue"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Error mapping [Age] for [pdspi-mapper-example].",
                      "source": "FHIR Bundle",
                      "level": 1,
                      "action": "Arbitrarily setting age to 35 with certitude 0 (not certain)"
                      },
                      {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Cannot respond in [500]ms, [pdspi-mapper-example].",
                      "source": "admin user",
                      "level": 1,
                      "action": "Returning only a subset of mapped variables and aborting."
                      }
                      ]
                  mappings:
                    type: object
                    properties:
                      txid:
                        type: string
                      values:
                        type: array
                        items:
                          $ref: "#/components/schemas/PatientVariableValue"
components:
  schemas:
    Message:
      description: "This schema mirrors the 'Log' schema from tx-logging (see github.com/RENCI/tx-logging)."
      type: object
      required:
        - timestamp
        - event
        - source
        - level
      properties:
        -id:
          not: {}
        timestamp:
          type: string
          format: date-time
          example: "2019-09-20T00:00:00Z"
        event:
          type: string
          example: "The specified mapper (pdspi-mapper-example) is not compatible with the specified FHIR server (pdspi-fhir-hapi)."
        source:
          type: string
          example: "admin user"
        level:
          description: "The level value mirrors syslog values, as follows: 1 - alert, 'immediate action is needed' : e.g., the data will be returned, but PDS picked a mapper/server at random because no default was selected; 2 - critical: this could indicate resources are nearing full, or similar; 3 - error: something unexpected happened, PDS tried to correct for it, but the admin should be alerted; 4 - warning: PDS had to correct something unexpectedly but all is well; 5 - notification, 'Normal but significant condition': a dashboard might chose to render this message in a special console box; 6 - informational: same as above, but for auditing; 7 - debugging: maybe the dashboard has an optional debugging console box for handling debug messages."
          type: integer
          enum: [1,2,3,4,5,6,7]
          example: 1
        action:
          type: string
          example: "Arbitrarily chose this FHIR server from those available: (pdspi-fhir-example). Only one FHIR server is available that is also compatible with pdspi-mapper-example"
    PatientVariableValue:
      type: object
      required:
        - id
        - variableValue
        - how
      properties:
        id:
          type: string
          description: "The id for one of the patient variables supported by this PDS version. If the client does not recognize this id, it should 1) log a warning, 2) not solicit user input for the id, 3) attempt to render the value, and 4) attempt to render the 'how' and 'why' for this unknown variable in the justification section of the client interface, assuming there is one."
          example: "LOINC:30525-0"
        title:
          type: string
          description: "A non-standardized, human-readable string to describe the patient variable indicated by this id. The 'title' may be implemented by the PDS to aid in debugging, and clients should not depend on this value. The client should have prior knowledge of the supported patient variables, and thus should provide it's own human-readable titles for representation on any end-user interfaces in the appropriate language."
          example: "Age"
        variableValue:
          type: object
          required:
            - value
          properties:
            value:
              type: string
              description: the actual value of the patient variable. If 'pds-retrieve-datum' then retrieve from patient data warehouse, otherwise use the value as-is
              example: "0.5"
            units:
              type: string
              description: "The unit is standard throughout the pds system. It's up to the guidance plugin to make unit conversions as needed by the guidance model, just as it is up to the dashboard to make unit conversions as needed by the end user."
              example: "years"
          description: "The patient variable id maps to only one RequiredPatientVariable, which in turn, defines all the legal values (legalValues) for this id. The legalValues defines the type for the variableValue, and so can be used to inform the client on how to render the variableValue. The client can find the type by calling the '/config' endpoint, matching the 'id' with that in the 'RequiredPatientVariable' schema, and looking up 'legalValues'. The variableValue may also include the 'units' field, which is optional, and if left off, implies the system default units. NOTE: The 'variableValue' is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: {"value": "0.5", "units": "years"}
        certitude:
          type: integer
          description: "The certitude of the value, 0 not certain, 1 somewhat certain, 2 certain. Defaults to 0, if absent"
          example: 2
        how:
          type: string
          description: "A value such as 'The value was specified by the end user.' indicates that any value in the EHR has been overriden by the client via the input values to the endpoint, and they will be simply passed back here."
          example: "The value was specified by the end user."
        timestamp:
          description: "If absent, defaults to current time."
          type: string
          format: date-time
          example: "2019-12-03T13:41:09.942+00:00"
    Config:
      type: object
      required:
        - pluginType
        - supportedPatientVariables
      properties:
        title:
          type: string
          description: "Meaningful name for this plugin"
          example: "DOAC variable mapper"
        piid:
          type: string
          description: "A string, unique to this deployment, used to identify this plugin in realtime"
          example: "pdspi-mapper-DOAC"
        pluginType:
          type: string
          enum: [e,g,m,mD,f,fD]
          description: "A value from the enumeration below identifying the plugin type. 'g'=Guidance, 'c'=convenience, 'm'=mapper, 'f'=FHIR data server, 'mD'= default mapper, 'fD'=default FHIR server. In the clinical arena, only one FHIR server and only one mapper is allowed, and this can be indicated either with the defaults, or by only installing one mapper and one FHIR plugin type."
          example: "m"
        pluginTypeTitle:
          type: string
          description: "A human-readable value for the type. 'g'=Guidance, 'c'=Convenience, 'm'=Mapping, 'f'=FHIR, 'mD'=Default Mapping plugin, 'fD'=Default FHIR plugin"
        pluginDependencies:
          type: array
          items:
            type: string
            description: "An array of container names upon which the plugin in question depends. For example, 'txscience/pds-fhir-example:0.2.0'. Mapper plugins must indicate a dependency on one or more FHIR plugins, but dependencies are discouraged otherwise in order to maintain the decoupling and reuse of plugins. Every plugin of type 'm' and 'mD' must have at least one 'f' or 'fD' plugin listed in pluginDependencies, otherwise return 500."
        pluginSelectors:
          description: "Maps the piid to a set of selector values."
          type: array
          items:
            $ref: '#/components/schemas/Selector'
        pluginParameterDefaults:
          description: "Default, typed values for any parameters that might be required by the plugin"
          type: array
          items:
            $ref: '#/components/schemas/PluginParameter'
        supportedPatientVariables:
          type: array
          items:
            $ref: '#/components/schemas/PatientVariableType'
    PluginParameter:
      type: object
      required:
        - id
        - parameterValue
      properties:
        id:
          type: string
          description: "The id for one of the parameters used by the plugin in question. Parameters are completely defined by the plugin and need not be interchangable with other plugins. The client will have no prior knowledge for plugin parameters."
          example: "current-time"
        title: 
          type: string
          description: "A non-standardized, human-readable string to describe the id. May be implemented by the PDS to aid in debugging, clients should not depend on this value."
          example: "Current Time"
        parameterDescription:
          type: string
          description: "Description provided by the plugin. The plugin, not the client, is therefore responsible for converting the descriptions to the appropriate language based on internationalization and personalization preferences."
          example: "Compute variables relevant to this timestamp."
        parameterValue:
          type: string
          description: "The actual value of the parameter. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: {"value": "2019-09-20T00:00:01Z"}
        legalValues:
          type: string
          description: "The 'legalValues' will always be present in the '/config' endpoint response and need not be provided to or from the client in the '/guidance' endpoint call. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: { "type": "string", "format": "time-stamp" }
    PatientVariableType:
      type: object
      required:
        - id
        - legalValues
      properties:
        id:
          type: string
          description: "The id for one of the patient variables supported by this mapper version. The client has the option of ignoring this variable if it doesn't recognize the id."
          example: "LOINC:30525-0"
        title:
          type: string
          description: "A non-standardized, human-readable string to describe the id. May be implemented by the mapper to aid in debugging, clients should not depend on this value. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: "Age"
        legalValues:
          type: object
          description: "If absent, all values are legal, so treat the value like a string. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. The client should have prior knowledge of the supported patient variables, and thus should provide it's own human-readable titles for representation on any end-user interfaces in the appropriate language. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: { "type": "number", "minimum": "0" }
        units:
          type: string
    Selector:
      description: "Used for selecting plugins"
      type: object
      required:
        - id
      properties:
        title:
          type: string
          example: "FHIR URI - an URL (locator) or an URN (unique name)"
          description: "Human-readable name for this selector type."
        id:
          type: string
          description: "The client should have prior knowledge of the full list of selectors available with this version of the mapper. This id is used to determine which selector type is described."
          example: "FHIR.URI"
        selectorValue:
          type: string
          description: "Unique identifier for this type. Stylistically, community standard coding system used for this type will preface the code used, e.g., http://fhir.org or urn://cdwh.nctracs.v1. The title in the example is optional. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: {"value": "http://hapi.fhir.org/baseR4", "title": "Hapi FHIR base URL"}
        legalValues:
          type: object
          description: "If absent, all values are legal, so treat the value like a string. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. Furthermore, a non-standard 'title' can be added in support of a human-readable string for the type's value. This maybe be implemented by the PDS to aid in debugging, however clients should not depend on this value. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: { "type": "string", "enum": [{"value": "urn://cdwh.nctracs.v1", "title": "NCTraCS Carolina Data Warehouse"},{"value": "http://hapi.fhir.org/baseR4"},{"value": "https://open-ic.epic.com/FHIR/api/FHIR/DSTU2"}] }
    Bundle:
      type: object
